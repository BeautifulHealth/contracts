{
    "buildInfo": {
        "rustc": {
            "version": "1.76.0-nightly",
            "commitHash": "d86d65bbc19b928387f68427fcc3a0da498d8a19",
            "commitDate": "2023-12-10",
            "channel": "Nightly",
            "short": "rustc 1.76.0-nightly (d86d65bbc 2023-12-10)"
        },
        "contractCrate": {
            "name": "esdt-safe",
            "version": "0.0.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.48.0"
        }
    },
    "name": "EsdtSafe",
    "constructor": {
        "inputs": [
            {
                "name": "is_sovereign_chain",
                "type": "bool"
            },
            {
                "name": "min_valid_signers",
                "type": "u32"
            },
            {
                "name": "initiator_address",
                "type": "Address"
            },
            {
                "name": "signers",
                "type": "variadic<Address>",
                "multi_arg": true
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "setFeeMarketAddress",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "fee_market_address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "setMultisigAddress",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "multisig_address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "setSovereignBridgeAddress",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "bridge_address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "upgrade",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "setMaxUserTxGasLimit",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_value",
                    "type": "u64"
                },
                {
                    "name": "opt_sig",
                    "type": "optional<array48<u8>>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "setBurnAndMint",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "tokens",
                    "type": "variadic<TokenIdentifier>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeBurnAndMint",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "tokens",
                    "type": "variadic<TokenIdentifier>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "addBannedEndpointNames",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "names",
                    "type": "variadic<bytes>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeBannedEndpointNames",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "names",
                    "type": "variadic<bytes>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "depositBack",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "to",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "Create an Elrond -> Sovereign transaction."
            ],
            "name": "deposit",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "to",
                    "type": "Address"
                },
                {
                    "name": "opt_transfer_data",
                    "type": "optional<multi<u64,bytes,List<bytes>>>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "Claim funds for failed Elrond -> Sovereign transactions.",
                "These are not sent automatically to prevent the contract getting stuck.",
                "For example, if the receiver is a SC, a frozen account, etc."
            ],
            "name": "claimRefund",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "token_id",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "List<EsdtTokenPayment>"
                }
            ]
        },
        {
            "docs": [
                "Sets the statuses for the transactions, after they were executed on the Sovereign side.",
                "",
                "Only TransactionStatus::Executed (3) and TransactionStatus::Rejected (4) values are allowed.",
                "Number of provided statuses must be equal to number of transactions in the batch."
            ],
            "name": "setTransactionBatchStatus",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "batch_id",
                    "type": "u64"
                },
                {
                    "name": "signature",
                    "type": "array48<u8>"
                },
                {
                    "name": "tx_statuses",
                    "type": "variadic<TransactionStatus>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "setMinValidSigners",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_value",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "addSigners",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "signers",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeSigners",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "signers",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "registerToken",
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "sov_token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_type",
                    "type": "EsdtTokenType"
                },
                {
                    "name": "token_display_name",
                    "type": "bytes"
                },
                {
                    "name": "token_ticker",
                    "type": "bytes"
                },
                {
                    "name": "num_decimals",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "clearRegisteredSovereignToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "sov_token_id",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "clearRegisteredMultiversxToken",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "mvx_token_id",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": []
        },
        {
            "name": "executeBridgeOps",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "hash_of_hashes",
                    "type": "bytes"
                },
                {
                    "name": "operation",
                    "type": "Operation"
                }
            ],
            "outputs": []
        },
        {
            "name": "setMaxTxBatchSize",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_max_tx_batch_size",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "setMaxTxBatchBlockDuration",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_max_tx_batch_block_duration",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "getCurrentTxBatch",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "optional<multi<u64,variadic<multi<u64,u64,Address,Address,List<EsdtTokenPayment>,List<StolenFromFrameworkEsdtTokenData>,Option<TransferData>>>>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getFirstBatchAnyStatus",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "optional<multi<u64,variadic<multi<u64,u64,Address,Address,List<EsdtTokenPayment>,List<StolenFromFrameworkEsdtTokenData>,Option<TransferData>>>>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getBatch",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "batch_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "optional<multi<u64,variadic<multi<u64,u64,Address,Address,List<EsdtTokenPayment>,List<StolenFromFrameworkEsdtTokenData>,Option<TransferData>>>>>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getBatchStatus",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "batch_id",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "BatchStatus"
                }
            ]
        },
        {
            "name": "getFirstBatchId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getLastBatchId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "setMaxBridgedAmount",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "token_id",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "max_amount",
                    "type": "BigUint"
                }
            ],
            "outputs": []
        },
        {
            "name": "getMaxBridgedAmount",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_id",
                    "type": "TokenIdentifier"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "endSetupPhase",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Tokens in the whitelist can be transferred without fees"
            ],
            "name": "addTokensToWhitelist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "tokens",
                    "type": "variadic<TokenIdentifier>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeTokensFromWhitelist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "tokens",
                    "type": "variadic<TokenIdentifier>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "docs": [
                "Tokens in blacklist cannot be transferred"
            ],
            "name": "addTokensToBlacklist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "tokens",
                    "type": "variadic<TokenIdentifier>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeTokensFromBlacklist",
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "opt_signature",
                    "type": "Option<array48<u8>>"
                },
                {
                    "name": "tokens",
                    "type": "variadic<TokenIdentifier>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "getTokenWhitelist",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<TokenIdentifier>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getTokenBlacklist",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<TokenIdentifier>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "pause",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "unpause",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "isPaused",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        }
    ],
    "promisesCallbackNames": [
        "execute"
    ],
    "events": [
        {
            "identifier": "deposit",
            "inputs": [
                {
                    "name": "dest_address",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "tokens",
                    "type": "variadic<multi<TokenIdentifier,u64,EsdtTokenData>>",
                    "indexed": true
                },
                {
                    "name": "event_data",
                    "type": "OperationData"
                }
            ]
        },
        {
            "identifier": "setStatusEvent",
            "inputs": [
                {
                    "name": "batch_id",
                    "type": "u64",
                    "indexed": true
                },
                {
                    "name": "tx_id",
                    "type": "u64",
                    "indexed": true
                },
                {
                    "name": "tx_status",
                    "type": "TransactionStatus",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "executedBridgeOp",
            "inputs": [
                {
                    "name": "hash_of_hashes",
                    "type": "bytes",
                    "indexed": true
                },
                {
                    "name": "hash_of_bridge_op",
                    "type": "bytes",
                    "indexed": true
                }
            ]
        }
    ],
    "esdtAttributes": [],
    "hasCallback": true,
    "types": {
        "BatchStatus": {
            "type": "enum",
            "variants": [
                {
                    "name": "AlreadyProcessed",
                    "discriminant": 0
                },
                {
                    "name": "Empty",
                    "discriminant": 1
                },
                {
                    "name": "PartiallyFull",
                    "discriminant": 2,
                    "fields": [
                        {
                            "name": "end_block_nonce",
                            "type": "u64"
                        },
                        {
                            "name": "tx_ids",
                            "type": "List<u64>"
                        }
                    ]
                },
                {
                    "name": "Full",
                    "discriminant": 3
                },
                {
                    "name": "WaitingForSignatures",
                    "discriminant": 4
                }
            ]
        },
        "EsdtTokenData": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_type",
                    "type": "EsdtTokenType"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                },
                {
                    "name": "frozen",
                    "type": "bool"
                },
                {
                    "name": "hash",
                    "type": "bytes"
                },
                {
                    "name": "name",
                    "type": "bytes"
                },
                {
                    "name": "attributes",
                    "type": "bytes"
                },
                {
                    "name": "creator",
                    "type": "Address"
                },
                {
                    "name": "royalties",
                    "type": "BigUint"
                },
                {
                    "name": "uris",
                    "type": "List<bytes>"
                }
            ]
        },
        "EsdtTokenPayment": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                }
            ]
        },
        "EsdtTokenType": {
            "type": "enum",
            "variants": [
                {
                    "name": "Fungible",
                    "discriminant": 0
                },
                {
                    "name": "NonFungible",
                    "discriminant": 1
                },
                {
                    "name": "SemiFungible",
                    "discriminant": 2
                },
                {
                    "name": "Meta",
                    "discriminant": 3
                },
                {
                    "name": "Invalid",
                    "discriminant": 4
                }
            ]
        },
        "Operation": {
            "type": "struct",
            "fields": [
                {
                    "name": "to",
                    "type": "Address"
                },
                {
                    "name": "tokens",
                    "type": "List<OperationEsdtPayment>"
                },
                {
                    "name": "data",
                    "type": "OperationData"
                }
            ]
        },
        "OperationData": {
            "type": "struct",
            "fields": [
                {
                    "name": "op_nonce",
                    "type": "u64"
                },
                {
                    "name": "op_sender",
                    "type": "Address"
                },
                {
                    "name": "opt_transfer_data",
                    "type": "Option<TransferData>"
                }
            ]
        },
        "OperationEsdtPayment": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                },
                {
                    "name": "token_data",
                    "type": "StolenFromFrameworkEsdtTokenData"
                }
            ]
        },
        "OperationTuple": {
            "type": "struct",
            "fields": [
                {
                    "name": "op_hash",
                    "type": "bytes"
                },
                {
                    "name": "operation",
                    "type": "Operation"
                }
            ]
        },
        "StolenFromFrameworkEsdtTokenData": {
            "type": "struct",
            "fields": [
                {
                    "name": "token_type",
                    "type": "EsdtTokenType"
                },
                {
                    "name": "amount",
                    "type": "BigUint"
                },
                {
                    "name": "frozen",
                    "type": "bool"
                },
                {
                    "name": "hash",
                    "type": "bytes"
                },
                {
                    "name": "name",
                    "type": "bytes"
                },
                {
                    "name": "attributes",
                    "type": "bytes"
                },
                {
                    "name": "creator",
                    "type": "Address"
                },
                {
                    "name": "royalties",
                    "type": "BigUint"
                },
                {
                    "name": "uris",
                    "type": "List<bytes>"
                }
            ]
        },
        "TransactionStatus": {
            "type": "enum",
            "variants": [
                {
                    "name": "None",
                    "discriminant": 0
                },
                {
                    "name": "Pending",
                    "discriminant": 1
                },
                {
                    "name": "InProgress",
                    "discriminant": 2
                },
                {
                    "name": "Executed",
                    "discriminant": 3
                },
                {
                    "name": "Rejected",
                    "discriminant": 4
                }
            ]
        },
        "TransferData": {
            "type": "struct",
            "fields": [
                {
                    "name": "gas_limit",
                    "type": "u64"
                },
                {
                    "name": "function",
                    "type": "bytes"
                },
                {
                    "name": "args",
                    "type": "List<bytes>"
                }
            ]
        }
    }
}
